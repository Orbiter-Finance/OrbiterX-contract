/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrbiterXRouter,
  OrbiterXRouterInterface,
} from "../../../contracts/OrbiterXRouterV2.sol/OrbiterXRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "ChangeMaker",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "changeMaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getMaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swapAnswer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161105038038061105083398101604081905261002f91610155565b61003833610049565b610043816001610099565b50610185565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a16100f5565b6001600160a01b038216600081815260016020526040808220805460ff191685151590811790915590519092917fff9f7067f06d44a2b4b3e42927b440ca9a478bd3c5baed93704f156e813aedaa91a35050565b6000546001600160a01b031633146101535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561016757600080fd5b81516001600160a01b038116811461017e57600080fd5b9392505050565b610ebc806101946000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146100fe5780638da5cb5b14610113578063ac9650d814610140578063c318330b14610160578063f2fde38b146101a057600080fd5b80633b2dbcce1461009657806343a0a7f2146100b8578063457c4cc6146100cb57806351cff8d9146100de57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b1366004610b3d565b6101c0565b005b6100b66100c6366004610b76565b61021c565b6100b66100d9366004610b76565b6102ab565b3480156100ea57600080fd5b506100b66100f9366004610c15565b610315565b34801561010a57600080fd5b506100b66103e0565b34801561011f57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004610c32565b6103f4565b6040516101379190610cf7565b34801561016c57600080fd5b5061019061017b366004610c15565b60016020526000908152604090205460ff1681565b6040519015158152602001610137565b3480156101ac57600080fd5b506100b66101bb366004610c15565b6104e9565b6101c861055f565b6001600160a01b038216600081815260016020526040808220805460ff191685151590811790915590519092917fff9f7067f06d44a2b4b3e42927b440ca9a478bd3c5baed93704f156e813aedaa91a35050565b6001600160a01b03851660009081526001602052604090205460ff166102805760405162461bcd60e51b815260206004820152601460248201527313585ad95c88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b6001600160a01b038416156102955782610297565b345b92506102a48486856105b9565b5050505050565b3360009081526001602052604090205460ff1661030a5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206d616b65720000000000000000006044820152606401610277565b6102a48486856105b9565b61031d61055f565b6001600160a01b038116156103b1576040516370a0823160e01b815230600482015281906103ad9033906001600160a01b038416906370a0823190602401602060405180830381865afa158015610378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039c9190610d59565b6001600160a01b0384169190610724565b5050565b60405133904780156108fc02916000818181858888f193505050501580156103ad573d6000803e3d6000fd5b50565b6103e861055f565b6103f26000610787565b565b60608167ffffffffffffffff81111561040f5761040f610d72565b60405190808252806020026020018201604052801561044257816020015b606081526020019060019003908161042d5790505b50905060005b828110156104e2576104b23085858481811061046657610466610d88565b90506020028101906104789190610d9e565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107d792505050565b8282815181106104c4576104c4610d88565b602002602001018190525080806104da90610dec565b915050610448565b5092915050565b6104f161055f565b6001600160a01b0381166105565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610277565b6103dd81610787565b6000546001600160a01b031633146103f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610277565b6001600160a01b03831661064a578047101561060e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610277565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610644573d6000803e3d6000fd5b50505050565b604051636eb1769f60e11b8152336004820152306024820152839082906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190610d59565b101561070a5760405162461bcd60e51b815260206004820152601c60248201527f417070726f766520496e73756666696369656e742042616c616e6365000000006044820152606401610277565b6106446001600160a01b038216338585610803565b505050565b6040516001600160a01b03831660248201526044810182905261071f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261083b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606107fc8383604051806060016040528060278152602001610e606027913961090d565b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106449085906323b872dd60e01b90608401610750565b6000610890826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109859092919063ffffffff16565b80519091501561071f57808060200190518101906108ae9190610e13565b61071f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610277565b6060600080856001600160a01b03168560405161092a9190610e30565b600060405180830381855af49150503d8060008114610965576040519150601f19603f3d011682016040523d82523d6000602084013e61096a565b606091505b509150915061097b8683838761099c565b9695505050505050565b60606109948484600085610a15565b949350505050565b60608315610a0b578251600003610a04576001600160a01b0385163b610a045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610277565b5081610994565b6109948383610af0565b606082471015610a765760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610277565b600080866001600160a01b03168587604051610a929190610e30565b60006040518083038185875af1925050503d8060008114610acf576040519150601f19603f3d011682016040523d82523d6000602084013e610ad4565b606091505b5091509150610ae58783838761099c565b979650505050505050565b815115610b005781518083602001fd5b8060405162461bcd60e51b81526004016102779190610e4c565b6001600160a01b03811681146103dd57600080fd5b80151581146103dd57600080fd5b60008060408385031215610b5057600080fd5b8235610b5b81610b1a565b91506020830135610b6b81610b2f565b809150509250929050565b600080600080600060808688031215610b8e57600080fd5b8535610b9981610b1a565b94506020860135610ba981610b1a565b935060408601359250606086013567ffffffffffffffff80821115610bcd57600080fd5b818801915088601f830112610be157600080fd5b813581811115610bf057600080fd5b896020828501011115610c0257600080fd5b9699959850939650602001949392505050565b600060208284031215610c2757600080fd5b81356107fc81610b1a565b60008060208385031215610c4557600080fd5b823567ffffffffffffffff80821115610c5d57600080fd5b818501915085601f830112610c7157600080fd5b813581811115610c8057600080fd5b8660208260051b8501011115610c9557600080fd5b60209290920196919550909350505050565b60005b83811015610cc2578181015183820152602001610caa565b50506000910152565b60008151808452610ce3816020860160208601610ca7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d4c57603f19888603018452610d3a858351610ccb565b94509285019290850190600101610d1e565b5092979650505050505050565b600060208284031215610d6b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610db557600080fd5b83018035915067ffffffffffffffff821115610dd057600080fd5b602001915036819003821315610de557600080fd5b9250929050565b600060018201610e0c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610e2557600080fd5b81516107fc81610b2f565b60008251610e42818460208701610ca7565b9190910192915050565b6020815260006107fc6020830184610ccb56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122012577ce9135f80a9b303a60e88379f25eebf4fdea83418f4b1198e34719fec9c64736f6c63430008130033";

type OrbiterXRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrbiterXRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrbiterXRouter__factory extends ContractFactory {
  constructor(...args: OrbiterXRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    maker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrbiterXRouter> {
    return super.deploy(maker, overrides || {}) as Promise<OrbiterXRouter>;
  }
  override getDeployTransaction(
    maker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(maker, overrides || {});
  }
  override attach(address: string): OrbiterXRouter {
    return super.attach(address) as OrbiterXRouter;
  }
  override connect(signer: Signer): OrbiterXRouter__factory {
    return super.connect(signer) as OrbiterXRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrbiterXRouterInterface {
    return new utils.Interface(_abi) as OrbiterXRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrbiterXRouter {
    return new Contract(address, _abi, signerOrProvider) as OrbiterXRouter;
  }
}
