/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrbiterXRouterV1,
  OrbiterXRouterV1Interface,
} from "../../../contracts/OrbiterXRouterV1.sol/OrbiterXRouterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "ChangeMaker",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "changeMaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getMaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swapAnswer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f32380380610f3283398101604081905261002f91610155565b61003833610049565b610043816001610099565b50610185565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a16100f5565b6001600160a01b038216600081815260016020526040808220805460ff191685151590811790915590519092917fff9f7067f06d44a2b4b3e42927b440ca9a478bd3c5baed93704f156e813aedaa91a35050565b6000546001600160a01b031633146101535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561016757600080fd5b81516001600160a01b038116811461017e57600080fd5b9392505050565b610d9e806101946000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146100fe5780638da5cb5b14610113578063ac9650d814610140578063c318330b14610160578063f2fde38b146101a057600080fd5b80633b2dbcce1461009657806343a0a7f2146100b8578063457c4cc6146100cb57806351cff8d9146100de57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b1366004610a1f565b6101c0565b005b6100b66100c6366004610a58565b61021c565b6100b66100d9366004610a58565b6102ab565b3480156100ea57600080fd5b506100b66100f9366004610af7565b610315565b34801561010a57600080fd5b506100b6610482565b34801561011f57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004610b14565b610496565b6040516101379190610bd9565b34801561016c57600080fd5b5061019061017b366004610af7565b60016020526000908152604090205460ff1681565b6040519015158152602001610137565b3480156101ac57600080fd5b506100b66101bb366004610af7565b61058b565b6101c8610601565b6001600160a01b038216600081815260016020526040808220805460ff191685151590811790915590519092917fff9f7067f06d44a2b4b3e42927b440ca9a478bd3c5baed93704f156e813aedaa91a35050565b6001600160a01b03851660009081526001602052604090205460ff166102805760405162461bcd60e51b815260206004820152601460248201527313585ad95c88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b6001600160a01b038416156102955782610297565b345b92506102a484868561065b565b5050505050565b3360009081526001602052604090205460ff1661030a5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206d616b65720000000000000000006044820152606401610277565b6102a484868561065b565b61031d610601565b6001600160a01b03811615610453576040516370a0823160e01b81523060048201526000906001600160a01b0383169063a9059cbb90339083906370a0823190602401602060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610c3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104109190610c54565b90508061044f5760405162461bcd60e51b815260206004820152600d60248201526c15da5d1a191c985dc811985a5b609a1b6044820152606401610277565b5050565b60405133904780156108fc02916000818181858888f1935050505015801561044f573d6000803e3d6000fd5b50565b61048a610601565b610494600061085d565b565b60608167ffffffffffffffff8111156104b1576104b1610c71565b6040519080825280602002602001820160405280156104e457816020015b60608152602001906001900390816104cf5790505b50905060005b82811015610584576105543085858481811061050857610508610c87565b905060200281019061051a9190610c9d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108ad92505050565b82828151811061056657610566610c87565b6020026020010181905250808061057c90610ceb565b9150506104ea565b5092915050565b610593610601565b6001600160a01b0381166105f85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610277565b61047f8161085d565b6000546001600160a01b031633146104945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610277565b6001600160a01b0383166106ec57804710156106b05760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610277565b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156106e6573d6000803e3d6000fd5b50505050565b604051636eb1769f60e11b815233600482015230602482015281906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610c3b565b10156107a15760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610277565b6040516323b872dd60e01b81523360048201526001600160a01b03838116602483015260448201839052600091908516906323b872dd906064016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610c54565b9050806106e65760405162461bcd60e51b815260206004820152600d60248201526c5472616e6665722057726f6e6760981b6044820152606401610277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606108d28383604051806060016040528060278152602001610d42602791396108d9565b9392505050565b6060600080856001600160a01b0316856040516108f69190610d12565b600060405180830381855af49150503d8060008114610931576040519150601f19603f3d011682016040523d82523d6000602084013e610936565b606091505b509150915061094786838387610951565b9695505050505050565b606083156109c05782516000036109b9576001600160a01b0385163b6109b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610277565b50816109ca565b6109ca83836109d2565b949350505050565b8151156109e25781518083602001fd5b8060405162461bcd60e51b81526004016102779190610d2e565b6001600160a01b038116811461047f57600080fd5b801515811461047f57600080fd5b60008060408385031215610a3257600080fd5b8235610a3d816109fc565b91506020830135610a4d81610a11565b809150509250929050565b600080600080600060808688031215610a7057600080fd5b8535610a7b816109fc565b94506020860135610a8b816109fc565b935060408601359250606086013567ffffffffffffffff80821115610aaf57600080fd5b818801915088601f830112610ac357600080fd5b813581811115610ad257600080fd5b896020828501011115610ae457600080fd5b9699959850939650602001949392505050565b600060208284031215610b0957600080fd5b81356108d2816109fc565b60008060208385031215610b2757600080fd5b823567ffffffffffffffff80821115610b3f57600080fd5b818501915085601f830112610b5357600080fd5b813581811115610b6257600080fd5b8660208260051b8501011115610b7757600080fd5b60209290920196919550909350505050565b60005b83811015610ba4578181015183820152602001610b8c565b50506000910152565b60008151808452610bc5816020860160208601610b89565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c2e57603f19888603018452610c1c858351610bad565b94509285019290850190600101610c00565b5092979650505050505050565b600060208284031215610c4d57600080fd5b5051919050565b600060208284031215610c6657600080fd5b81516108d281610a11565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610cb457600080fd5b83018035915067ffffffffffffffff821115610ccf57600080fd5b602001915036819003821315610ce457600080fd5b9250929050565b600060018201610d0b57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251610d24818460208701610b89565b9190910192915050565b6020815260006108d26020830184610bad56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b37e9edc64a120366aa5c326c04b9714ccad1445d2c2a2eb5a9e9a31874d22e164736f6c63430008130033";

type OrbiterXRouterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrbiterXRouterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrbiterXRouterV1__factory extends ContractFactory {
  constructor(...args: OrbiterXRouterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    maker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrbiterXRouterV1> {
    return super.deploy(maker, overrides || {}) as Promise<OrbiterXRouterV1>;
  }
  override getDeployTransaction(
    maker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(maker, overrides || {});
  }
  override attach(address: string): OrbiterXRouterV1 {
    return super.attach(address) as OrbiterXRouterV1;
  }
  override connect(signer: Signer): OrbiterXRouterV1__factory {
    return super.connect(signer) as OrbiterXRouterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrbiterXRouterV1Interface {
    return new utils.Interface(_abi) as OrbiterXRouterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrbiterXRouterV1 {
    return new Contract(address, _abi, signerOrProvider) as OrbiterXRouterV1;
  }
}
